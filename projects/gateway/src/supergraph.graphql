schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

type Country
  @join__owner(graph: COUNTRIES)
  @join__type(graph: COUNTRIES, key: "countryCode")
  @join__type(graph: COVID19, key: "countryCode")
  @join__type(graph: POPULATION, key: "countryCode")
{
  countryCode: String! @join__field(graph: COUNTRIES)
  covid19: CountryCovid19 @join__field(graph: COVID19)
  name: String! @join__field(graph: COUNTRIES)
  population: Int @join__field(graph: POPULATION)
}

type CountryCovid19 {
  totalConfirmed: Int
  totalDeath: Int
}

type Query {
  countries(countryCodes: [String!]): [Country] @join__field(graph: COUNTRIES)
  country(countryCode: String!): Country @join__field(graph: COUNTRIES)
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  COUNTRIES @join__graph(name: "countries" url: "http://localhost:4001/graphql")
  COVID19 @join__graph(name: "covid19" url: "http://localhost:4002/graphql")
  POPULATION @join__graph(name: "population" url: "http://localhost:4003/graphql")
}
